name: CI/CD Pipeline

on:
  push:
    branches:
      - master  # Trigger pipeline on push to 'master' branch
  pull_request:
    branches:
      - master  # Trigger pipeline on pull request to 'master'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Check out the code from the repository
    - name: Checkout code
      uses: actions/checkout@v2

    # Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'  # Set Python version to 3.9

    # Install dependencies
    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    # Run tests
    - name: Run tests
      run: |
        pytest --maxfail=1 --disable-warnings -q  # Run tests with pytest

  docker:
    runs-on: ubuntu-latest
    needs: build  # Only run this job if the build job is successful

    steps:
      # Check out the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t my-fastapi-app .

      # Push the Docker image to Docker Hub or any registry
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: |
          docker tag my-fastapi-app kapilsolanki2808/my-fastapi-app:latest
          docker push kapilsolanki2808/my-fastapi-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker  # Only run this job if the Docker job is successful

    steps:
      # Deploy to local server using SSH
      - name: Deploy to local server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << EOF
            # Pull the latest Docker image from Docker Hub
            docker pull kapilsolanki2808/my-fastapi-app:latest

            # Run or restart your FastAPI app with Docker Compose (if using Docker Compose)
            # Make sure your docker-compose.yml file exists on the server and is properly configured
            docker-compose -f /path/to/your/docker-compose.yml up -d

            # Or, if you're using simple Docker commands, you can run the following instead:
            # docker run -d -p 80:80 kapilsolanki2808/my-fastapi-app:latest

          EOF
